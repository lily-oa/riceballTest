{"version":3,"sources":["all.js"],"names":["correctTest","name","Promise","resolve","reject","console","log","setTimeout","score","Math","round","random","all","then","data"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA,SAASA,WAAW,CAACC,IAAI,EAAE;EACzB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBC,UAAU,CAAC,YAAM;MACf,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;MAC3CR,OAAO,CAAC;QACNF,IAAI,EAAJA,IAAI;QACJO,KAAK,EAALA;MACF,CAAC,CAAC;IACN,CAAC,EAAEC,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;EAC1B,CAAC,CAAC;AACJ;AACAT,OAAO,CAACU,GAAG,CAAC,CAACZ,WAAW,CAAC,IAAI,CAAC,EAACA,WAAW,CAAC,IAAI,CAAC,EAACA,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CACjEa,IAAI,CAAC,UAAAC,IAAI;EAAA,OAAIT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;AAAA,EAAC","file":"all.js","sourcesContent":["// Swal.fire({\n//   icon:'info',\n//   title: '請填寫文字內容',\n//   input: 'text',\n// }).then(result => {\n//   console.log(result.value);\n//   Swal.fire({\n//     icon:'success',\n//     title:'新增內容成功',\n//     text: result.value\n//   })\n// })\n\n\n//----------------------------------------------------------test\n// const timeout = setTimeout(callFun, 1500);\n\n// function callFun(){\n//   console.log('觸發');\n// }\n\n// const timeout2 = setTimeout(()=> console.log('qq'), 2000);\n\n// const timeout3 = setTimeout(() => console.log('你好'), 3000);\n\n// const timeout4 = setTimeout(() => console.log('end'), 4000); \n\n//---------------------------------------------------------------test2\n// const checkScore = new Promise((resolve, reject) => {\n//   console.log('正在批改中')\n//   setTimeout(()=>{\n//    const score = Math.round(Math.random()*100);\n//    if(score >= 60){\n//     resolve(score);\n//    }else{\n//     reject('不及格');\n//    }\n//   }, 2000);\n  \n  \n// });\n\n// checkScore\n//   .then(data => console.log(data))  \n//   .catch(error => console.log(error))\n\n\n\n// const checkStuName = new Promise((resolve, reject) =>{\n//   console.log('正在確認名單');\n//   setTimeout(() => {\n//     const stuScore = Math.round(Math.random()*100);\n//     if(stuScore >= 60){\n//       resolve(stuScore);\n//     }else{\n//       reject(`${stuScore}這是要刪除的名單號`);\n//     }\n//   }, 5000);\n// });\n\n// checkStuName\n//   .then(data => console.log(data))\n//   .catch(error => console.log(error));\n\n//------------------------------------------------------test3\n// const checkScore = (score) =>{\n//   return new Promise((resolve, reject) => {\n//     console.log('正在觀察是否及格')\n//     setTimeout(()=>{\n\n//     if(score >= 60){\n//       resolve(score);\n//     }else{\n//       reject('不及格');\n//     }\n//     }, 2000);\n//   });\n// }\n\n// checkScore(60)\n//   .then(data => console.log(data))  \n//   .catch(error => console.log(error))\n\n//-------------------------------------------------------test4\n// function correctTest(name) {\n//   return new Promise((resolve, reject) => {\n//     console.log('正在批改作業中');\n//     setTimeout(() => {\n//       const score = Math.round(Math.random() * 100);\n//       if (score >= 20) {\n//         resolve({\n//           name,\n//           score\n//         })\n//       }else{\n//         reject(`退學，分數是${score}`)\n//       }\n//     }, 1000);\n//   });\n// }\n\n// function checkReward(data){\n//   return new Promise((resolve, reject) => {\n//     console.log('正在檢查獎品中');\n//     setTimeout(()=>{\n//       if(data.score>=90){\n//         resolve(`${data.name}獲得電影票`)\n//       }else if(data.score>=60 && data.score<90){\n//         resolve(`${data.name}獲得嘉獎`)\n//       }else{\n//         reject(`你沒有獎品，打手心10下!分數是${data.score}`)\n//       }\n//     }, 1000)\n//   })\n// }\n\n// correctTest(\"小明\")\n//   .then(data => {\n//     return checkReward(data);\n//   })\n//   .then(reward => console.log(reward))\n//.then( data => console.log(`分數是${data.score}, 名字是${data.name}`))\n//   .catch(error => console.log(error))\n\n//-------------------------------------------------------------------------------test5\n// function correctTest(name) {\n//   return new Promise((resolve, reject) => {\n//     console.log('正在批改作業中');\n//     setTimeout(() => {\n//       const score = Math.round(Math.random() * 100);\n//       if (score >= 20) {\n//         resolve({\n//           name,\n//           score\n//         })\n//       }else{\n//         reject(`退學，分數是${score}`)\n//       }\n//     }, 1000);\n//   });\n// }\n\n// function checkReward(data){\n//   return new Promise((resolve, reject) => {\n//     console.log('正在檢查獎品中');\n//     setTimeout(()=>{\n//       if(data.score>=90){\n//         resolve(`${data.name}獲得電影票`)\n//       }else if(data.score>=60 && data.score<90){\n//         resolve(`${data.name}獲得嘉獎`)\n//       }else{\n//         reject(`你沒有獎品，打手心10下!分數是${data.score}`)\n//       }\n//     }, 1000)\n//   })\n// }\n\n// async、await  非同步語法\n// const init = async function () {\n//   try {\n//     const studentA = await correctTest('小明');\n// 過一秒後才執行下段語法\n//     const rewardA = await checkReward(studentA);\n//     console.log(rewardA);\n\n//   } catch (error) {\n//     console.log(error)\n//   }\n// }\n// init();\n\n\n//--------------------------------------------------------test6\n// Promise.all\nfunction correctTest(name) {\n  return new Promise((resolve, reject) => {\n    console.log('正在批改作業中');\n    setTimeout(() => {\n      const score = Math.round(Math.random() * 100);\n        resolve({\n          name,\n          score\n        })\n    }, Math.random() * 1000);\n  });\n}\nPromise.all([correctTest('小明'),correctTest('小花'),correctTest('小小')])\n  .then(data => console.log(data));\n"]}